name: Deploy to ECR backend

on:
  push:
    branches: [main]

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY_BACKEND: ${{ secrets.ECR_REPOSITORY_BACKEND }}

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.6'

      - name: Install pipenv
        run: pip install pipenv flake8

      - name: Cache Pipenv
        uses: actions/cache@v3
        with:
          path: |
            ~/.pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run the linter
        run: pipenv run lint


  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from Repository
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run:  pipenv run test

  push-backend:
    runs-on: ubuntu-latest
    needs: [linting, test]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: List files
        run: ls -R

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag and Push Backend Docker image
        run:
          docker build -t $ECR_REPOSITORY_BACKEND:latest ./starter/backend
      - name: Tag Docker image
        run:
          docker tag $ECR_REPOSITORY_BACKEND:latest $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest
      - name: Push Docker image
        run:
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:latest
      
      - name: Deploy Docker Image to Amazon EKS
        working-directory: k8s
        run: |
          aws eks update-kubeconfig --name udacity-project4 --region us-east-1
          kustomize edit set image $ECR_REGISTRY/$ECR_REPOSITORY_BACKEND:$IMAGE_TAG
          kustomize build | kubectl apply -f -