name: Frontend Continuous Integration

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Trigger the workflow on push or pull request,
  # but only for the main and develop branches
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
  
env:
  REACT_APP_MOVIE_URL: 'http://localhost:5000'

jobs:
  # Job to install dependencies and run linting
  linting:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository to the GitHub Actions runner
    # so that the workflow can access the code
    # in the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Node.js
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.14'
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json

    # Install dependencies and run lint
    - name: Install dependencies and run lint
      working-directory: starter/frontend
      run: |
        npm ci
        npm run lint

  # Job to install dependencies and run tests# 
  test:
    runs-on: ubuntu-latest
    # Steps to run on the runner
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    # Set up Node.js
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.14'
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json
    # Install dependencies and run test
    - name: Install dependencies and run test
      working-directory: starter/frontend
      run: |
        npm ci
        npm run test

  build:
    runs-on: ubuntu-latest
    needs: [linting, test]  

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.14'
        cache: 'npm'
        cache-dependency-path: starter/frontend/package-lock.json    

    - name: Build Fronted, Check and Run Docker
      working-directory: starter/frontend
      run: |
        docker build --build-arg=REACT_APP_MOVIE_API_URL=http://localhost:5000 --tag=mp-frontend:latest .
        docker images|grep movie-pipeline-frontend
        docker run --name movie-pipeline-frontend -p 3000:3000 -d movie-pipeline-frontend

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install NPM and run TEST
      run : |
        npm ci
        npm test