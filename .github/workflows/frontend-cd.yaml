name: Deploy to ECR frontend

on:
  push:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY_FRONTEND: ${{ secrets.ECR_REPOSITORY_FRONTEND }}
  CLUSTER_NAME: movie-pipeline-cluster

defaults:
  run:
    working-directory: ./starter/frontend

jobs:
  linting:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code from repository
          uses: actions/checkout@v3

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18.14'

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.OS }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.OS }}-npm-cache-

        - name: Install NPM dependencies
          run: npm ci

        - name: Run lint
          run: npm run lint --fix

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.14'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run:  npm test

  push-frontend:
    needs: [linting, test]
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: List files
        run: ls -R

      - name: Log in to ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag and Push Frontend Docker image
        run: 
          docker build -t $ECR_REPOSITORY_FRONTEND:latest .

      - name: Tag Docker image
        run:
          docker tag $ECR_REPOSITORY_FRONTEND:latest $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:latest
      
      - name: List Docker images
        run: docker images

      - name: Push Docker image
        run:
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:latest

      - name: Configure kubeconfig
        run: aws eks update-kubeconfig --name $CLUSTER_NAME --region $AWS_REGION

      - name: Deploy to K8s
        run :   |
            cd k8s
            kustomize edit set image frontend=$ECR_REGISTRY/$ECR_REPOSITORY_FRONTEND:latest
            kustomize build|kubectl apply -k .
      
      - name: Gather K8 info
        run :   |
            kubectl get svc -A